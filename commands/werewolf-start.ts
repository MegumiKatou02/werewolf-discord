import {
  SlashCommandBuilder,
  PermissionFlagsBits,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  type Interaction,
  PermissionsBitField,
  MessageFlags,
} from 'discord.js';

import { gameRooms } from '../core/room.js';

export default {
  data: new SlashCommandBuilder()
    .setName('masoi-start')
    .setDescription('B·∫Øt ƒë·∫ßu ch∆°i game'),

  async execute(interaction: Interaction) {
    if (!interaction.isChatInputCommand()) {
      return;
    }

    if (!interaction.inGuild()) {
      return interaction.reply({
        content: 'L·ªánh n√†y ch·ªâ s·ª≠ d·ª•ng ƒë∆∞·ª£c trong server.',
        flags: MessageFlags.Ephemeral,
      });
    }

    await interaction.deferReply({ flags: MessageFlags.Ephemeral });

    const guildId = interaction.guildId;

    if (!gameRooms.has(guildId)) {
      return interaction.editReply(
        'Ch∆∞a c√≥ ph√≤ng ch∆°i, h√£y ƒë·ªÉ ng∆∞·ªùi ch∆°i tham gia tr∆∞·ªõc.',
      );
    }

    const room = gameRooms.get(guildId);

    if (!room) {
      return interaction.editReply(
        'Kh√¥ng t√¨m th·∫•y ph√≤ng ma s√≥i trong server n√†y',
      );
    }

    if (room.status !== 'waiting') {
      return interaction.editReply('Tr√≤ ch∆°i ƒë√£ b·∫Øt ƒë·∫ßu ho·∫∑c k·∫øt th√∫c.');
    }

    // const member = interaction.member;

    const isAdmin =
      (interaction.member?.permissions instanceof PermissionsBitField &&
        interaction.member.permissions.has(
          PermissionFlagsBits.Administrator,
        )) ??
      false;
    const isHost = interaction.user.id === room.hostId;
    const isDev = interaction.user.id === process.env.DEVELOPER;

    if (!isAdmin && !isHost && !isDev) {
      return interaction.editReply({
        content: '‚ùå Ch·ªâ host/admin/dev m·ªõi ƒë∆∞·ª£c ph√©p b·∫Øt ƒë·∫ßu tr√≤ ch∆°i.',
      });
    }

    const row = new ActionRowBuilder<ButtonBuilder>().addComponents(
      new ButtonBuilder()
        .setCustomId('use_default_roles')
        .setLabel('D√πng vai tr√≤ m·∫∑c ƒë·ªãnh')
        .setStyle(ButtonStyle.Primary),
      new ButtonBuilder()
        .setCustomId('customize_roles_json')
        .setLabel('Tu·ª≥ ch·ªânh vai tr√≤ (JSON)')
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('customize_roles_name')
        .setLabel('Tu·ª≥ ch·ªânh vai tr√≤ (T√™n)')
        .setStyle(ButtonStyle.Secondary),
    );

    return interaction.editReply({
      content: 'üéÆ Ch·ªçn c√°ch ph√¢n vai tr√≤:',
      components: [row],
    });
  },
};
